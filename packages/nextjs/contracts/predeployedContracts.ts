/**
 * This file is autogenerated by Scaffold-Stark.
 * You should not edit it manually or your changes might be overwritten.
 */
const universalEthAddress =
  "0x49D36570D4E46F48E99674BD3FCC84644DDD6B96F7C741B1562B82F9E004DC7";
  const ShaboyStorageContractAddress ="0x06ae41e8faab299099c23da7d2375780fe2cfefd20189483ee9478b751d5caa2"
  const ShaboySubscriptionContractAddress = "0x071417ac5a5dcd0cc3d8931ca7f257456828b9d3bd5215461ed1c474fb365363"
  const UniversalDeployerContractAddress="0x041a78e741e5af2fec34b695679bc6891742439f7afb8484ecd7766661ad02bf"
const preDeployedContracts = {
  devnet: {
    Eth: {
      address: universalEthAddress,
      abi: [
        {
          type: "impl",
          name: "ERC20Impl",
          interface_name: "openzeppelin::token::erc20::interface::IERC20",
        },
        {
          name: "openzeppelin::token::erc20::interface::IERC20",
          type: "interface",
          items: [
            {
              name: "name",
              type: "function",
              inputs: [],
              outputs: [
                {
                  type: "core::felt252",
                },
              ],
              state_mutability: "view",
            },
            {
              name: "symbol",
              type: "function",
              inputs: [],
              outputs: [
                {
                  type: "core::felt252",
                },
              ],
              state_mutability: "view",
            },
            {
              name: "decimals",
              type: "function",
              inputs: [],
              outputs: [
                {
                  type: "core::integer::u8",
                },
              ],
              state_mutability: "view",
            },
            {
              name: "allowance",
              type: "function",
              inputs: [
                {
                  name: "owner",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "spender",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [
                {
                  type: "core::integer::u256",
                },
              ],
              state_mutability: "view",
            },
            {
              name: "transfer",
              type: "function",
              inputs: [
                {
                  name: "recipient",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "amount",
                  type: "core::integer::u256",
                },
              ],
              outputs: [
                {
                  type: "core::bool",
                },
              ],
              state_mutability: "external",
            },
            {
              name: "approve",
              type: "function",
              inputs: [
                {
                  name: "spender",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "amount",
                  type: "core::integer::u256",
                },
              ],
              outputs: [
                {
                  type: "core::bool",
                },
              ],
              state_mutability: "external",
            },
          ],
        },
        {
          name: "ERC20CamelOnlyImpl",
          type: "impl",
          interface_name:
            "openzeppelin::token::erc20::interface::IERC20CamelOnly",
        },
        {
          type: "interface",
          name: "openzeppelin::token::erc20::interface::IERC20CamelOnly",
          items: [
            {
              name: "totalSupply",
              type: "function",
              inputs: [],
              outputs: [
                {
                  type: "core::integer::u256",
                },
              ],
              state_mutability: "view",
            },
            {
              name: "balanceOf",
              type: "function",
              inputs: [
                {
                  name: "account",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [
                {
                  type: "core::integer::u256",
                },
              ],
              state_mutability: "view",
            },
            {
              name: "transferFrom",
              type: "function",
              inputs: [
                {
                  name: "sender",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "recipient",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "amount",
                  type: "core::integer::u256",
                },
              ],
              outputs: [
                {
                  type: "core::bool",
                },
              ],
              state_mutability: "external",
            },
          ],
        },
        {
          kind: "struct",
          name: "openzeppelin::token::erc20_v070::erc20::ERC20::Transfer",
          type: "event",
          members: [
            {
              kind: "data",
              name: "from",
              type: "core::starknet::contract_address::ContractAddress",
            },
            {
              kind: "data",
              name: "to",
              type: "core::starknet::contract_address::ContractAddress",
            },
            {
              kind: "data",
              name: "value",
              type: "core::integer::u256",
            },
          ],
        },
        {
          kind: "enum",
          name: "openzeppelin::token::erc20_v070::erc20::ERC20::Event",
          type: "event",
          variants: [
            {
              kind: "nested",
              name: "Transfer",
              type: "openzeppelin::token::erc20_v070::erc20::ERC20::Transfer",
            },
          ],
        },
      ],
    },
  },
  sepolia: {
    Eth: {
      address: universalEthAddress,
      abi: [
        {
          type: "impl",
          name: "ERC20Impl",
          interface_name: "openzeppelin::token::erc20::interface::IERC20",
        },
        {
          name: "openzeppelin::token::erc20::interface::IERC20",
          type: "interface",
          items: [
            {
              name: "name",
              type: "function",
              inputs: [],
              outputs: [
                {
                  type: "core::felt252",
                },
              ],
              state_mutability: "view",
            },
            {
              name: "symbol",
              type: "function",
              inputs: [],
              outputs: [
                {
                  type: "core::felt252",
                },
              ],
              state_mutability: "view",
            },
            {
              name: "decimals",
              type: "function",
              inputs: [],
              outputs: [
                {
                  type: "core::integer::u8",
                },
              ],
              state_mutability: "view",
            },
            {
              name: "total_supply",
              type: "function",
              inputs: [],
              outputs: [
                {
                  type: "core::integer::u256",
                },
              ],
              state_mutability: "view",
            },
            {
              name: "balance_of",
              type: "function",
              inputs: [
                {
                  name: "account",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [
                {
                  type: "core::integer::u256",
                },
              ],
              state_mutability: "view",
            },
            {
              name: "allowance",
              type: "function",
              inputs: [
                {
                  name: "owner",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "spender",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [
                {
                  type: "core::integer::u256",
                },
              ],
              state_mutability: "view",
            },
            {
              name: "transfer",
              type: "function",
              inputs: [
                {
                  name: "recipient",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "amount",
                  type: "core::integer::u256",
                },
              ],
              outputs: [
                {
                  type: "core::bool",
                },
              ],
              state_mutability: "external",
            },
            {
              name: "transfer_from",
              type: "function",
              inputs: [
                {
                  name: "sender",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "recipient",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "amount",
                  type: "core::integer::u256",
                },
              ],
              outputs: [
                {
                  type: "core::bool",
                },
              ],
              state_mutability: "external",
            },
            {
              name: "approve",
              type: "function",
              inputs: [
                {
                  name: "spender",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "amount",
                  type: "core::integer::u256",
                },
              ],
              outputs: [
                {
                  type: "core::bool",
                },
              ],
              state_mutability: "external",
            },
          ],
        },
        {
          name: "ERC20CamelOnlyImpl",
          type: "impl",
          interface_name:
            "openzeppelin::token::erc20::interface::IERC20CamelOnly",
        },
        {
          type: "interface",
          name: "openzeppelin::token::erc20::interface::IERC20CamelOnly",
          items: [
            {
              name: "totalSupply",
              type: "function",
              inputs: [],
              outputs: [
                {
                  type: "core::integer::u256",
                },
              ],
              state_mutability: "view",
            },
            {
              name: "balanceOf",
              type: "function",
              inputs: [
                {
                  name: "account",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [
                {
                  type: "core::integer::u256",
                },
              ],
              state_mutability: "view",
            },
            {
              name: "transferFrom",
              type: "function",
              inputs: [
                {
                  name: "sender",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "recipient",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "amount",
                  type: "core::integer::u256",
                },
              ],
              outputs: [
                {
                  type: "core::bool",
                },
              ],
              state_mutability: "external",
            },
          ],
        },
        {
          kind: "struct",
          name: "openzeppelin::token::erc20_v070::erc20::ERC20::Transfer",
          type: "event",
          members: [
            {
              kind: "data",
              name: "from",
              type: "core::starknet::contract_address::ContractAddress",
            },
            {
              kind: "data",
              name: "to",
              type: "core::starknet::contract_address::ContractAddress",
            },
            {
              kind: "data",
              name: "value",
              type: "core::integer::u256",
            },
          ],
        },
        {
          kind: "enum",
          name: "openzeppelin::token::erc20_v070::erc20::ERC20::Event",
          type: "event",
          variants: [
            {
              kind: "nested",
              name: "Transfer",
              type: "openzeppelin::token::erc20_v070::erc20::ERC20::Transfer",
            },
          ],
        },
      ],
    },
    ShaboyStorageContract: {
      address: ShaboyStorageContractAddress,
      abi: [
        {
          type: "impl",
          name: "StoreArrayImpl",
          interface_name:
            "contracts::storageCairoArray::IShaboyStorageContract",
        },
        {
          type: "interface",
          name: "contracts::storageCairoArray::IShaboyStorageContract",
          items: [
            {
              type: "function",
              name: "seterc20",
              inputs: [
                {
                  name: "ownerAddress",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "deployedContract",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "seterc721",
              inputs: [
                {
                  name: "ownerAddress",
                  type: "core::starknet::contract_address::ContractAddress",
                },
                {
                  name: "deployedContract",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [],
              state_mutability: "external",
            },
            {
              type: "function",
              name: "geterc20",
              inputs: [
                {
                  name: "walletForCheck",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [
                {
                  type: "core::array::Array::<core::starknet::contract_address::ContractAddress>",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "geterc721",
              inputs: [
                {
                  name: "walletForCheck",
                  type: "core::starknet::contract_address::ContractAddress",
                },
              ],
              outputs: [
                {
                  type: "core::array::Array::<core::starknet::contract_address::ContractAddress>",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "getallerc20s",
              inputs: [],
              outputs: [
                {
                  type: "core::array::Array::<core::starknet::contract_address::ContractAddress>",
                },
              ],
              state_mutability: "view",
            },
            {
              type: "function",
              name: "getallerc721s",
              inputs: [],
              outputs: [
                {
                  type: "core::array::Array::<core::starknet::contract_address::ContractAddress>",
                },
              ],
              state_mutability: "view",
            },
          ],
        },
        {
          type: "event",
          name: "contracts::storageCairoArray::ShaboyStorageContract::Event",
          kind: "enum",
          variants: [],
        },
      ],
    },
    ShaboySubscription:{
      address:ShaboySubscriptionContractAddress,
      "abi": [
        {
            "type": "impl",
            "name": "ShaboySubscription",
            "interface_name": "starknet_testing::subscription::IShaboyRegistry"
        },
        {
            "type": "enum",
            "name": "core::bool",
            "variants": [
                {
                    "name": "False",
                    "type": "()"
                },
                {
                    "name": "True",
                    "type": "()"
                }
            ]
        },
        {
            "type": "interface",
            "name": "starknet_testing::subscription::IShaboyRegistry",
            "items": [
                {
                    "type": "function",
                    "name": "add_subscription",
                    "inputs": [
                        {
                            "name": "user",
                            "type": "core::starknet::contract_address::ContractAddress"
                        }
                    ],
                    "outputs": [],
                    "state_mutability": "external"
                },
                {
                    "type": "function",
                    "name": "get_subscription",
                    "inputs": [
                        {
                            "name": "address",
                            "type": "core::starknet::contract_address::ContractAddress"
                        }
                    ],
                    "outputs": [
                        {
                            "type": "core::bool"
                        }
                    ],
                    "state_mutability": "view"
                }
            ]
        },
        {
            "type": "event",
            "name": "starknet_testing::subscription::ShaboySubscription::Event",
            "kind": "enum",
            "variants": []
        }
    ]
    },
    UniversalDeployer:{
      address:UniversalDeployerContractAddress,
      abi:[
        {
          "data": [
            {
              "name": "address",
              "type": "felt"
            },
            {
              "name": "deployer",
              "type": "felt"
            },
            {
              "name": "unique",
              "type": "felt"
            },
            {
              "name": "classHash",
              "type": "felt"
            },
            {
              "name": "calldata_len",
              "type": "felt"
            },
            {
              "name": "calldata",
              "type": "felt*"
            },
            {
              "name": "salt",
              "type": "felt"
            }
          ],
          "keys": [],
          "name": "ContractDeployed",
          "type": "event"
        },
        {
          "inputs": [
            {
              "name": "classHash",
              "type": "felt"
            },
            {
              "name": "salt",
              "type": "felt"
            },
            {
              "name": "unique",
              "type": "felt"
            },
            {
              "name": "calldata_len",
              "type": "felt"
            },
            {
              "name": "calldata",
              "type": "felt*"
            }
          ],
          "name": "deployContract",
          "outputs": [
            {
              "name": "address",
              "type": "felt"
            }
          ],
          "type": "function"
        }
      ]
    }
  },
} as const;

export default preDeployedContracts;
